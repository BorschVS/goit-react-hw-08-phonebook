{"version":3,"file":"static/js/842.0d955311.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilterContacts = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterContacts],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useState } from 'react';\n\nimport { IoMdPersonAdd } from 'react-icons/io';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [form, setForm] = useState({});\n\n  function contactExists(currentName) {\n    return contacts.find(({ name }) => name === currentName) !== undefined;\n  }\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setForm({ ...form, [name]: value });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (form.name.trim() === '') console.log('asdasd');\n    contactExists(form.name)\n      ? toast.error(`${form.name} is already in contacts`)\n      : dispatch(addContact(form));\n\n    !contactExists(form.name) && setForm({});\n  }\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label}>\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          value={form.name || ''}\n          onChange={handleChange}\n          required\n          placeholder=\"NAME\"\n        />\n      </label>\n\n      <label className={css.label}>\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          value={form.number || ''}\n          onChange={handleChange}\n          required\n          placeholder=\"NUMBER\"\n        />\n      </label>\n\n      <button type=\"submit\" className={css.button}>\n        <span>Add contact</span>\n        <IoMdPersonAdd />\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"ContactItem_listItem__NSSYk\",\"text\":\"ContactItem_text__6hT0E\",\"number\":\"ContactItem_number__mfZ8x\",\"deleteButton\":\"ContactItem_deleteButton__AvFnv\",\"infoWrapper\":\"ContactItem_infoWrapper__qDcUb\",\"info\":\"ContactItem_info__fyb5q\"};","import css from './ContactItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { IoMdPerson } from 'react-icons/io';\nimport { FaPhoneAlt } from 'react-icons/fa';\nimport { RiDeleteBin2Line } from 'react-icons/ri';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <li className={css.listItem} key={id}>\n      <div className={css.infoWrapper}>\n        <p className={css.info}>\n          <IoMdPerson />\n          <span className={css.name}>{name}</span>\n        </p>\n        <a className={css.info} href={`tel:${number}`}>\n          <span className={css.number}>\n            <FaPhoneAlt />\n            {number}\n          </span>\n        </a>\n      </div>\n      <button\n        className={css.deleteButton}\n        onClick={() => dispatch(deleteContact(id))}\n      >\n        <RiDeleteBin2Line size={16} />\n      </button>\n    </li>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\"};","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport css from './ContactList.module.css';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    contacts.length > 0 && (\n      <ul className={css.contactList}>\n        {contacts.map(({ id, name, number }) => {\n          return <ContactItem key={id} id={id} name={name} number={number} />;\n        })}\n      </ul>\n    )\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../redux/contacts/operations';\n\n// UI\nimport Box from '@mui/material/Box';\nimport { Grid } from '@mui/material';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n  const contactsExist = contacts.length > 0;\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <Box component=\"section\" display=\"flex\" flexDirection=\"column\">\n        <div className=\"container\">\n          <Grid container spacing={2}>\n            <Grid item xs={4} md={4}>\n              <ContactForm />\n            </Grid>\n            <Grid item xs={4} md={8}>\n              {contactsExist && <ContactList />}\n            </Grid>\n          </Grid>\n        </div>\n      </Box>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","form","setForm","contactExists","currentName","undefined","find","_ref","handleChange","e","_e$target","target","value","_objectSpread","_defineProperty","_jsxs","className","css","onSubmit","preventDefault","trim","console","log","toast","concat","addContact","children","_jsx","type","onChange","required","placeholder","number","IoMdPersonAdd","ContactItem","id","IoMdPerson","href","FaPhoneAlt","onClick","deleteContact","RiDeleteBin2Line","size","ContactList","length","map","contactsExist","useEffect","fetchContacts","_Fragment","Helmet","Box","component","display","flexDirection","Grid","container","spacing","item","xs","md"],"sourceRoot":""}